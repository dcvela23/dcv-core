{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/main.js","src/js/modules/Navbar.js","src/js/modules/animation/smooth-scroll.js","src/js/modules/animation/svg-transitions-easings.js","src/js/modules/animation/svg-transitions.js","src/js/modules/animation/text-trail.js","src/js/utils/classes.js","src/js/utils/offset.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nimport Navbar from './modules/Navbar.js';\nimport SvgTransitions from './modules/animation/svg-transitions.js';\nimport SmoothScroll from './modules/animation/smooth-scroll.js';\nimport TexTrail from './modules/animation/text-trail.js';\n\n(function() {\n\n  if (document.querySelectorAll('#animation--svg-transitions').length > 0) {\n    var SvgTransitionsInit = new SvgTransitions(document.querySelector(\"#animation--svg-transitions\"))\n  }\n  if (document.querySelectorAll('#animation--smooth-scroll').length > 0) {\n    var SmoothScrollInit = new SmoothScroll(document.querySelector(\"#animation--smooth-scroll\"))\n  }\n\n  if (document.querySelectorAll('#animation--text-trail').length > 0) {\n    var TexTrailInit = new TexTrail(document.querySelector(\"#animation--text-trail\"))\n  }\n\n  var NavbarInit = new Navbar(document.querySelector(\"#nav\"));\n})()\n","import { offset } from './../utils/offset'\nimport { hasClass, addClass, removeClass, toggleClass } from './../utils/classes'\n\nclass Navbar {\n  constructor(el){\n    this.navbar = {el: el};\n    this.navbarEl = this.navbar.el;\n    this.navbarHeight = this.navbarEl.offsetHeight;\n    this.navbarTop;\n    this.navbarBottom = this.navbarHeight + this.navbarTop;\n    this.navbarLinks = this.navbarEl.querySelectorAll('a');\n    this.navbarWrapper = this.navbarEl.querySelector('.navbar');\n    this.navbarMobileMenu = this.navbarEl.querySelector('.navbar__mobile');\n    this.initEvents();\n\n    if (window.matchMedia(\"(min-width: 1024px)\").matches) {\n      this.initDesktopEvents();\n    }\n    if (window.matchMedia(\"(max-width: 1023px)\").matches) {\n      this.initMobileEvents();\n    }\n  }\n  initEvents(){\n    if (document.querySelectorAll('#home').length > 0) {\n      this.moveToSection();\n    }\n  };\n  initDesktopEvents(){\n    var that = this;\n    document.addEventListener(\"scroll\", function(){\n      that.addSticky();\n    });\n  };\n  initMobileEvents(){\n    var that = this;\n    this.navbarMobileMenu.addEventListener(\"click\", function(){\n      that.showNavMobile();\n    });\n    if (document.querySelectorAll('#services').length > 0) {\n      this.navbarEl.querySelectorAll('.navbar__links--dropdown__items a').forEach(function(link){\n        link.addEventListener(\"click\", function(){\n          toggleClass(that.navbarWrapper, 'opened')\n        });\n      })\n    }\n  }\n  moveToSection(){\n    var that = this;\n    this.navbarLinks.forEach(function(link){\n      if (link.getAttribute('data-link') !== null) {\n        link.addEventListener(\"click\", function(){\n          event.preventDefault();\n          var sectionTo = document.querySelector('#' + link.getAttribute('data-link') + '')\n          window.scrollTo({\n            top: offset(sectionTo).top - 75,\n            left: 0,\n            behavior: 'smooth'\n          });\n          toggleClass(that.navbarWrapper, 'opened')\n        });\n\n      }\n    })\n  };\n  addSticky(){\n    this.navbarTop = offset(this.navbarEl).top;\n\n    if (this.navbarTop > 100){\n      if (!hasClass(this.navbarEl, 'sticky')){\n        addClass(this.navbarEl, 'sticky')\n      }\n    } else {\n      removeClass(this.navbarEl, 'sticky')\n    }\n  }\n  showNavMobile(){\n    toggleClass(this.navbarWrapper, 'opened')\n  }\n} export default Navbar;\n","import { offset } from './../../utils/offset'\nimport { hasClass, addClass, removeClass } from './../../utils/classes'\n\n// helpers\n\nconst MathUtils = {\n  // map number x from range [a, b] to [c, d]\n  map: (x, a, b, c, d) => (x - a) * (d - c) / (b - a) + c,\n  // linear interpolation\n  lerp: (a, b, n) => (1 - n) * a + n * b\n}\n\nconst body = document.body;\n\n// window size and recalculate on resize\nlet winsize;\nconst calcWinsize = () => winsize = {width: window.innerWidth, height: window.innerHeigth};\ncalcWinsize();\n\nwindow.addEventListener('resize', calcWinsize);\n\n// scrollY track\nlet docScroll;\nconst getYScroll = () => docScroll = window.pageYOffset || document.documentElement.scrollTop;\n\ngetYScroll();\nwindow.addEventListener('scroll', getYScroll)\n\nclass SmoothScroll {\n  // TODO: only in desktop CHROME AND SAFARI\n  // TODO: preloadIMAGES in order to calculate the HEIGHT\n\n  constructor(el){\n    this.DOM = {main: document.querySelector('.main')};\n    this.DOM.scrollable = this.DOM.main.querySelector('div[data-scroll]');\n\n    this.renderedStyles = {\n      translationY: {\n        // interpolated value\n        //we interpolate between the previous and current value to achieve the smooth scrolling effect\n        previous: 0,\n        // current value\n        current: 0,\n        // amount to interpolate\n        ease: 0.05,\n        // current value setter\n        setValue: () => docScroll\n      }\n    }\n    getYScroll();\n    this.initEvents();\n  }\n\n  checkValues() {\n    //console.log(this.renderedStyles.translationY.setValue())\n  }\n\n  initEvents() {\n    this.setBodySize();\n    this.updateStyles(); // set the initial values and init layout\n    this.setMainStyles(); // set the fixes values to main wrapper\n\n    window.addEventListener('scroll', () => this.checkValues())\n    window.addEventListener('resize', () => this.setBodySize())\n\n    requestAnimationFrame(() => this.render());\n  }\n\n  setBodySize() {\n    // set the heigh of the body in order to keep the scrollbar on the page\n    body.style.height = `${this.DOM.scrollable.scrollHeight}px`\n  }\n\n  updateStyles() {\n    // sets the initial value (no interpolation) - translate the scroll value\n    for (const key in this.renderedStyles) {\n      this.renderedStyles[key].current = this.renderedStyles[key].previous = this.renderedStyles[key].setValue();\n    }\n    // translate the scrollable element\n    this.translateScrollable();\n  }\n\n  translateScrollable() {\n    // translates the scrollable element\n    this.DOM.scrollable.style.transform = `translate3d(0,${-1*this.renderedStyles.translationY.previous}px,0)`;\n  }\n\n  setMainStyles() {\n    this.DOM.main.style.position = 'fixed';\n    this.DOM.main.style.width = this.DOM.main.style.height = '100%';\n    this.DOM.main.style.top = this.DOM.main.style.left = 0;\n    this.DOM.main.style.overflow = 'hidden';\n  }\n\n  render() {\n    for (const key in this.renderedStyles) {\n      this.renderedStyles[key].current = this.renderedStyles[key].setValue();\n      this.renderedStyles[key].previous = MathUtils.lerp(this.renderedStyles[key].previous, this.renderedStyles[key].current, this.renderedStyles[key].ease);\n    }\n\n    this.translateScrollable();\n\n    // loop..\n    requestAnimationFrame(() => this.render());\n\n  }\n\n\n\n} export default SmoothScroll;\n","//\n// these easing functions are based on the code of glsl-easing module.\n// https://github.com/glslify/glsl-easings\n//\n\nconst ease = {\n  exponentialIn: (t) => {\n    return t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n  },\n  exponentialOut: (t) => {\n    return t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n  },\n  exponentialInOut: (t) => {\n    return t == 0.0 || t == 1.0\n      ? t\n      : t < 0.5\n        ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n        : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0;\n  },\n  sineOut: (t) => {\n    const HALF_PI = 1.5707963267948966;\n    return Math.sin(t * HALF_PI);\n  },\n  circularInOut: (t) => {\n    return t < 0.5\n        ? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))\n        : 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\n  },\n  cubicIn: (t) => {\n    return t * t * t;\n  },\n  cubicOut: (t) => {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n  },\n  cubicInOut: (t) => {\n    return t < 0.5\n      ? 4.0 * t * t * t\n      : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n  },\n  quadraticOut: (t) => {\n    return -t * (t - 2.0);\n  },\n  quarticOut: (t) => {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n  },\n}\n\nexport default ease;\n","import { offset } from './../../utils/offset'\nimport { hasClass, addClass, removeClass } from './../../utils/classes'\nimport ease from './svg-transitions-easings'\n\nclass SvgTransitions {\n  constructor(el){\n    this.shapesWrapper = el.querySelector('.shape-overlays');\n    this.path = this.shapesWrapper.querySelectorAll('path');\n    this.numBeizerPoints = 2;\n    this.duration = 1300;\n    this.delayPointsArray = [];\n    this.delayPointsMax = 0;\n    this.delayPerPath = 100;\n    this.timeStart = Date.now();\n    this.isOpened = false;\n    this.isAnimating = false;\n    this.navBtns = document.querySelectorAll('.main__wrapper ul li')\n\n    this.initEvents();\n  }\n\n  initEvents(){\n    this.navBtns.forEach((el) => {\n      el.addEventListener('click',() => {\n        this.toggle()\n      })\n    })\n  }\n\n  toggle() {\n    this.isAnimating = true;\n    for (var i = 0; i < this.numBeizerPoints; i++) {\n      this.delayPointsArray[i] = 0;\n    }\n    if (this.isOpened === false) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n  open() {\n    this.isOpened = true;\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  close() {\n    this.isOpened = false;\n    this.timeStart = Date.now();\n    this.renderLoop();\n  }\n  updatePath(time) {\n    const points = [];\n    for (var i = 0; i < this.numBeizerPoints; i++) {\n      const thisEase = this.isOpened ?\n                        (i == 1) ? ease.cubicOut : ease.cubicInOut:\n                        (i == 1) ? ease.cubicInOut : ease.cubicOut;\n      points[i] = thisEase(Math.min(Math.max(time - this.delayPointsArray[i], 0) / this.duration, 1)) * 100\n    }\n\n    let str = '';\n    str += (this.isOpened) ? `M 0 0 V ${points[0]} ` : `M 0 ${points[0]} `;\n\n\n    for (var i = 0; i < this.numBeizerPoints - 1; i++) {\n      const p = (i + 1) / (this.numBeizerPoints - 1) * 100;\n      const cp = p - (1 / (this.numBeizerPoints - 1) * 100) / 2;\n      str += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${points[i + 1]} `;\n    }\n    str += (this.isOpened) ? `V 0 H 0` : `V 100 H 0`;\n\n    return str;\n  }\n  render() {\n    if (this.isOpened) {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i)));\n\n      }\n    } else {\n      for (var i = 0; i < this.path.length; i++) {\n        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * (this.path.length - i - 1))));\n      }\n    }\n  }\n  renderLoop() {\n    this.render();\n    if (Date.now() - this.timeStart < this.duration + this.delayPerPath * (this.path.length - 1) + this.delayPointsMax) {\n      requestAnimationFrame(() => {\n        this.renderLoop();\n      });\n    }\n    else {\n      this.isAnimating = false;\n    }\n  }\n\n} export default SvgTransitions;\n","import { offset } from './../../utils/offset'\nimport { hasClass, addClass, removeClass } from './../../utils/classes'\n\nclass TexTrail {\n  constructor(el){\n    console.log('asd')\n\n    this.initEvents();\n  }\n\n  initEvents(){\n  }\n} export default TexTrail;\n","export function hasClass(el, className) {\n\treturn el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\n}\n\nexport function addClass(el, className) {\n\tif (el.classList) {\n\t\tel.classList.add(className);\n\t} else if (!hasClass(el, className)) {\n\t\tel.className += ' ' + className;\n\t}\n}\n\nexport function removeClass(el, className) {\n  if (el.classList){\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n}\n\nexport function toggleClass(el, className) {\n\tif (el.classList) {\n\t  el.classList.toggle(className);\n\t} else {\n\t  var classes = el.className.split(' ');\n\t  var existingIndex = classes.indexOf(className);\n\n\t  if (existingIndex >= 0)\n\t    classes.splice(existingIndex, 1);\n\t  else\n\t    classes.push(className);\n\t  el.className = classes.join(' ');\n\t}\n}\n","export const offset = function offset(el) {\n  var rect = el.getBoundingClientRect(),\n      scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n      scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}